#!/bin/bash
#
# this is just a copy of parse-cards.sh the key difference being that it takes an already searched jisho json response
# this is because i can only really do development on the streetcar home from work so I need to work offline

wordjson="$(cat ./agaru.json)"

#TODO add: "Adverbial noun","Temporal noun","Godan verb with u ending","Expression","Godan verb with su ending",
#	   "Godan verb with mu ending","Godan verb with gu ending","Godan verb with ku ending","Godan verb with bu ending",
#	   "Godan verb - aru special class","Godan verb with nu ending","Godan verb with tsu ending",
#	   "Nidan verb (lower class) with dzu ending (archaic)","Ichidan verb - zuru verb (alternative form of -jiru verbs)"
#I may need to account for the other godan verbs as well?
declare -A ling_func_map=(
	["Godan verb with ru ending"]="五段"
	["Ichidan verb"]="一段"
	["Transitive verb"]="他動詞"
	["intransitive verb"]="自動詞"
	["Noun"]="名詞"
	["Suru verb"]="する" 
	["I-adjective"]="形容詞"
	["Na-adjective"]="形容動詞"
	["No-adjective"]="の形容動詞"
	["Adverb"]="副詞"
	["Adverb taking the 'to' particle"]="と副詞"
)

#loop through the parts of speech and put them in the linguistic_function
i=0
#pos = part of speech
current_pos=$(echo "${wordjson}" | jq -r .data[0].senses[0].parts_of_speech["${i}"])
#if current_pos = "null" then that means that we've reached the end of the parts_of_speech array
while [[ "null" != "${current_pos}" ]]; do
    #for debugging purposes...
    echo "pos"
    echo "The current pos is:	${current_pos}"
    echo "pos"
    #if this is the first time throught the loop then ${Linguistic_function} is empty
    if [[ -z  "${Linguistic_function}" ]]; then
	Linguistic_function=${ling_func_map["${current_pos}"]}
    else
	Linguistic_function="${Linguistic_function},${ling_func_map["${current_pos}"]}"
    fi
    i=$(($i+1))
    current_pos=$(echo ${wordjson} | jq -r .data[0].senses[0].parts_of_speech[${i}])
done

#for back we need to loop through .data[0].senses and then loop throught senses[i].english_definitions[j]
#and get the .data[0].senses[i].english_definitions[] array

i=0
current_defs=$(echo "${wordjson}" | jq -r .data[0].senses["${i}"].english_definitions)
while [[ "null" != "${current_defs}" ]]; do
    echo "${current_defs}"
    j=0
    current_definition=$(echo "${wordjson}" | jq -r .data[0].senses["${i}"].english_definitions["${j}"])
    while [[ "null" != "${current_definition}" ]]; do
    	echo "${current_definition}"
    	j=$(($j+1))
    	current_definition=$(echo "${wordjson}" | jq -r .data[0].senses["${i}"].english_definitions["${j}"])
    done
    i=$(($i+1))
    current_defs=$(echo "${wordjson}" | jq -r .data[0].senses["${i}"].english_definitions)
done


#Front="${inputword}"
Front=$(echo ${wordjson} | jq -r '.data[0].japanese[0].word')
Back=""
Example=""
Reading=$(echo ${wordjson} | jq -r '.data[0].japanese[0].reading')
#Linguistic_function="$(echo ${wordjson} | jq '.data[0].senses[0].parts_of_speech'),$(echo ${wordjson} | jq '.data[0].japanese[0].reading')"


echo ""
echo "the variables are..."
echo ${Front}
echo ${Back}
echo ${Example}
echo ${Reading}
echo ${Linguistic_function}
